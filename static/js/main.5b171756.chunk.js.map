{"version":3,"sources":["Constants.js","components/tile.js","components/square.js","components/board.js","App.js","serviceWorker.js","index.js"],"names":["ItemTypes","TILE","useStyles","makeStyles","tile","height","width","background","p","color","join","opacity","isDragging","Tile","item","fixed","useDrag","canDrag","collect","monitor","drag","c","className","ref","draggable","square","border","correct","position","zIndex","selected","transform","transition","cursor","display","content","top","left","borderRadius","backgroundColor","Square","tileColor","onDrop","onClick","dndItem","useDrop","accept","canDrop","drop","a","console","log","undefined","sameField","b","x","y","board","gridTemplateColumns","W","gridTemplateRows","H","Board","correctBoard","swap","length","React","useState","setSelected","backend","HTML5Backend","options","enableMouseEvents","preview","squares","push","key","JSON","stringify","type","pos","correctColors","colors","ok","forEach","c1","i","c2","j","Math","max","map","k","abs","getColors","floor","random","randomColor","min","SIM_CONST","combineColors","colorA","coefA","colorB","coefB","shuffleBoard","filter","genBoard","iter","colorAbove","colorBelow","concat","current","parse","checkWin","app","App","useRef","setBoard","counter","setCounter","useEffect","pid","setTimeout","alert","clearTimeout","board_old","helper","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b171756.chunk.js","sourcesContent":["export const ItemTypes = {\n    TILE: 'tile',\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles'\nimport { useDrag } from 'react-dnd'\n\nimport { ItemTypes } from '../Constants'\n\nconst useStyles = makeStyles({\n  tile: {\n    height: '100%',\n    width: '100%',\n    background: p => `rgb(${p.color.join(\", \")})`,\n    opacity: p => p.isDragging ? 0: 1,\n  }\n});\n\nfunction Tile({color, item, fixed}) {\n  const [ {isDragging}, drag ] = useDrag({\n    item,\n    canDrag: () => !fixed,\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  })\n  const c = useStyles({isDragging, color});\n  return (\n    <div\n      className={c.tile}\n      ref={drag}\n      draggable\n    />\n  );\n}\n\nexport default Tile;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles'\nimport { useDrop } from 'react-dnd'\n\nimport Tile from './tile'\nimport { ItemTypes } from '../Constants'\n\nconst useStyles = makeStyles({\n  square: {\n    background: '#000',\n    border: p => `5px solid ${ p.correct ? '#CCC': '#000'}`,\n    position: 'relative',\n\n    zIndex: p => p.selected ? 1: 0,\n    transform: p => p.selected ? 'scale(1.2)': 'scale(1)',\n    transition: 'all .1s ease-out',\n    cursor: p => p.fixed? 'initial': 'pointer',\n    \"&::before\": {\n      display: p => p.fixed ? 'block': 'none',\n      content: '\" \"',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      borderRadius: '100%',\n      backgroundColor: '#000',\n      width: '10%',\n      height: '10%',\n    }\n  }\n});\n\nfunction Square({tileColor, onDrop, onClick, selected, fixed, dndItem, correct}) {\n  const [, drop] = useDrop({\n    accept: ItemTypes.TILE,\n    canDrop: () => !fixed,\n    drop: a => {console.log(a); onDrop(a)},\n  })\n\n  const c = useStyles({selected, fixed, correct});\n  return (\n    <div\n      className={c.square}\n      ref={drop}\n      onClick={fixed ? undefined: onClick}\n    >\n      <Tile\n        color={tileColor}\n        item={dndItem}\n        fixed={fixed}\n      />\n    </div>\n  );\n}\n\nexport default Square;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles'\nimport { DndProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport TouchBackend from 'react-dnd-touch-backend'\n\nimport Square from './square'\nimport { ItemTypes } from '../Constants'\n\nconst sameField = (a, b) => {\n  return a.x === b.x && a.y === b.y\n}\n\nconst useStyles = makeStyles({\n  board: {\n    height: '100vmin',\n    width: '100vmin',\n\n    display: 'grid',\n    gridTemplateColumns: p => `repeat(${p.W}, 1fr)`,\n    gridTemplateRows: p => `repeat(${p.H}, 1fr)`,\n  }\n});\n\nfunction Board({board, correctBoard, swap}) {\n  const W = board.length\n  const H = (board[0] || []).length\n  const c = useStyles({ W, H })\n\n  const [ selected, setSelected ] = React.useState(undefined)\n\n  return (\n    <DndProvider backend={HTML5Backend} options={{enableMouseEvents: true, preview: true}}>\n      <div\n        className={c.board}\n      >\n        {(()=>{\n          const squares = []\n          for (let y = 0; y < H; ++y) {\n            for (let x = 0; x < W; ++x) {\n              squares.push(\n                <Square\n                  key={[x,y].join(', ')}\n                  tileColor={board[x][y]}\n                  fixed={(y === 0 || y === H-1) && (x === 0 || x === W-1)}\n                  correct={JSON.stringify(board[x][y]) === JSON.stringify(correctBoard[x][y])}\n                  dndItem={{\n                    type: ItemTypes.TILE,\n                    pos: {x, y},\n                  }}\n                  selected={selected !== undefined && sameField(selected, {x, y})}\n                  onDrop={item => {\n                    swap(item.pos, {x, y})\n                  }}\n                  onClick={() => {\n                    if (selected === undefined) {\n                      setSelected({x, y})\n                    } else {\n                      if (!sameField(selected, {x, y})) {\n                        swap(selected, {x, y})\n                      }\n                      setSelected(undefined)\n                    }\n                  }}\n                />\n              )\n            }\n          }\n          return squares\n        })()}\n      </div>\n    </DndProvider>\n  );\n}\n\nexport default Board;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles'\n\nimport Board from './components/board'\nimport { ItemTypes } from './Constants'\n\nlet [ W, H ] = [5, 5]\nconst SIM_CONST = 30\n\nconst randomColor = () => {\n  let color = []\n  for (let i = 0; i < 3; i++) {\n    color.push(Math.floor(Math.random() * 256))\n  }\n  return color\n}\n\nconst colorDist = (a, b) => {\n  return Math.max(...a.map((item, i) => Math.abs(a[i] - b[i])))\n}\n\nconst correctColors = colors => {\n  let ok = true\n\n  colors.forEach((c1, i)=> {\n    colors.forEach((c2, j) => {\n      if (i === j) return\n      if (Math.max(...c1.map((c, k) => Math.abs(c - c2[k]))) < SIM_CONST) {\n        ok = false\n        return\n      }\n    })\n  })\n  return ok\n}\n\nconst getColors = () => {\n  let colors = []\n  for (let i = 0, j = 4; i < j; ++i) {\n    let color = randomColor()\n    if (j < 100 && colors.length && Math.min(...colors.map(c => colorDist(c, color))) < SIM_CONST*(W-1)) {\n      ++j;\n    } else {\n      colors.push(color);\n    }\n  }\n  return colors;\n}\n\nconst combineColors = (colorA, coefA, colorB, coefB) => {\n  return colorA.map((item, i) => Math.floor((colorA[i]*coefA + colorB[i]*coefB)/(coefA+coefB) + .5))\n}\n\nconst shuffleBoard = board => {\n  let colors = []\n  for (let i = 0; i < W; ++i) {\n    for (let j = 0; j < H; ++j) {\n      if ((i === 0 || i === W-1) && (j === 0 || j === H-1)) continue\n      colors.push(board[i][j])\n    }\n  }\n  \n  for (let i = 0; i < W; ++i) {\n    for (let j = 0; j < H; ++j) {\n      if ((i === 0 || i === W-1) && (j === 0 || j === H-1)) continue\n      board[i][j] = colors[Math.floor(Math.random()*colors.length)]\n      colors = colors.filter(c => c !== board[i][j])\n    }\n  }\n  return board\n}\n\nconst genBoard = (correctBoard, iter=1) => {\n  const colors = getColors();\n  const board = []\n  for (let i = 0; i < W; ++i) {\n    board.push([])\n    let colorAbove = combineColors(colors[0], W-1-i, colors[1], i)\n    let colorBelow = combineColors(colors[2], W-1-i, colors[3], i)\n    for (let j = 0; j < H; ++j) {\n      board[i].push(\n        combineColors(colorAbove, H-1-j, colorBelow, j)\n      )\n    }\n  }\n  if (!correctColors([].concat(...board)) && iter < 100) correctBoard.current = genBoard({}, iter+1)\n  else {\n    correctBoard.current = board\n    console.log(\"it took\", iter, \"iterations\")\n  }\n  return shuffleBoard(JSON.parse(JSON.stringify(correctBoard.current)))\n}\n\nconst checkWin = (board, correctBoard) => {\n  for (let i = 0; i < W; ++i) {\n    for (let j = 0; j < H; ++j) {\n      if (JSON.stringify(board[i][j]) !== JSON.stringify(correctBoard.current[i][j])) {\n        //console.log('at', [i, j], board[i][j], 'is not same as', correctBoard.current[i][j])\n        return false\n      }\n    }\n  }\n  return true\n}\n\nconst useStyles = makeStyles({\n  app: {\n  }\n});\n\nfunction App() {\n  const c = useStyles();\n  const correctBoard = React.useRef()\n  const [ board, setBoard ] = React.useState(() => genBoard(correctBoard))\n  const [ counter, setCounter ] = React.useState(0)\n  React.useEffect(() => {\n    if (checkWin(board, correctBoard)) {\n      const pid = setTimeout(() => {\n        alert(`E> Yay you did it! <3 It took you ${counter} steps. World averadge is ${counter*2}.`)\n        setBoard(genBoard(correctBoard))\n      }, 500)\n      return () => clearTimeout(pid)\n    }\n  }, [board])\n\n  const swap = (a, b) => {\n    setCounter(c => c+1)\n    setBoard(board_old => {\n      let board = JSON.parse(JSON.stringify(board_old))\n      let helper = board[a.x][a.y]\n      board[a.x][a.y] = board[b.x][b.y]\n      board[b.x][b.y] = helper\n      return board\n    })\n    console.log('swapped', a, 'and', b)\n  }\n\n  return (\n    <div className={c.app}>\n      <Board board={board} correctBoard={correctBoard.current} swap={swap}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}