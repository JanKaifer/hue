{"version":3,"sources":["Constants.js","components/tile.js","components/square.js","components/board.js","App.js","serviceWorker.js","index.js"],"names":["ItemTypes","TILE","vals","colors","i","new_color","__i","j","push","Math","floor","max","min","COLORS","useStyles","makeStyles","tile","height","width","background","p","color","join","opacity","isDragging","Tile","item","fixed","useDrag","canDrag","collect","monitor","drag","c","className","ref","draggable","square","border","wallSize","correct","position","zIndex","selected","transform","transition","cursor","display","content","top","left","borderRadius","backgroundColor","Square","tileColor","onDrop","onClick","dndItem","useDrop","accept","canDrop","drop","undefined","sameField","a","b","x","y","board","gridTemplateColumns","W","gridTemplateRows","H","Board","correctBoard","swap","length","React","useState","setSelected","setWallSize","window","backend","HTML5Backend","options","enableMouseEvents","preview","squares","key","JSON","stringify","type","pos","correctColors","ok","forEach","c1","c2","map","k","abs","getColors","random","combineColors","colorA","coefA","colorB","coefB","shuffleBoard","filter","genBoard","iter","colorAbove","colorBelow","concat","current","console","log","parse","checkWin","app","controls","App","useRef","setDim","toString","input","setInput","setBoard","useEffect","counter","setCounter","pid","setTimeout","alert","clearTimeout","solve","board_old","helper","value","onChange","e","target","Number","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9a8ebf92.chunk.js","sourcesContent":["export const ItemTypes = {\n    TILE: 'tile',\n}\n\nconst vals = [0, 64, 128, 192, 255]\nlet colors = []\nfor (let i = 0; i < 125; i++) {\n  let new_color = []\n  let __i = i\n  for (let j = 0; j < 3; ++j) {\n    new_color.push(vals[__i%5])\n    __i = Math.floor(__i/5)\n  }\n  if (Math.max(...new_color) - Math.min(...new_color) < 128) {\n    continue\n  } else {\n    colors.push(new_color)\n  }\n}\n\nexport const COLORS = [\n  ...colors\n]\n\nexport const SIM_CONST = 10\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles'\nimport { useDrag } from 'react-dnd'\n\nimport { ItemTypes } from '../Constants'\n\nconst useStyles = makeStyles({\n  tile: {\n    height: '100%',\n    width: '100%',\n    background: p => `rgb(${p.color.join(\", \")})`,\n    opacity: p => p.isDragging ? 0: 1,\n  }\n});\n\nfunction Tile({color, item, fixed}) {\n  const [ {isDragging}, drag ] = useDrag({\n    item,\n    canDrag: () => !fixed,\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  })\n  const c = useStyles({isDragging, color});\n  return (\n    <div\n      className={c.tile}\n      ref={drag}\n      draggable\n    />\n  );\n}\n\nexport default Tile;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles'\nimport { useDrop } from 'react-dnd'\n\nimport Tile from './tile'\nimport { ItemTypes } from '../Constants'\n\nconst useStyles = makeStyles({\n  square: {\n    background: '#000',\n    border: p => `${p.wallSize}px solid ${ p.correct ? '#CCC': '#000'}`,\n    position: 'relative',\n\n    zIndex: p => p.selected ? 1: 0,\n    transform: p => p.selected ? 'scale(1.2)': 'scale(1)',\n    transition: 'all .1s ease-out',\n    cursor: p => p.fixed? 'initial': 'pointer',\n    \"&::before\": {\n      display: p => p.fixed ? 'block': 'none',\n      content: '\" \"',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      borderRadius: '100%',\n      backgroundColor: '#000',\n      width: '10%',\n      height: '10%',\n    }\n  }\n});\n\nfunction Square({tileColor, onDrop, onClick, selected, fixed, dndItem, correct, wallSize}) {\n  const [, drop] = useDrop({\n    accept: ItemTypes.TILE,\n    canDrop: () => !fixed,\n    drop: onDrop,\n  })\n\n  const c = useStyles({selected, fixed, correct, wallSize});\n  return (\n    <div\n      className={c.square}\n      ref={drop}\n      onClick={fixed ? undefined: onClick}\n    >\n      <Tile\n        color={tileColor}\n        item={dndItem}\n        fixed={fixed}\n      />\n    </div>\n  );\n}\n\nexport default Square;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles'\nimport { DndProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport TouchBackend from 'react-dnd-touch-backend'\n\nimport Square from './square'\nimport { ItemTypes } from '../Constants'\n\nconst sameField = (a, b) => {\n  return a.x === b.x && a.y === b.y\n}\n\nconst useStyles = makeStyles({\n  board: {\n    height: '100vmin',\n    width: '100vmin',\n\n    display: 'inline-grid',\n    gridTemplateColumns: p => `repeat(${p.W}, 1fr)`,\n    gridTemplateRows: p => `repeat(${p.H}, 1fr)`,\n  }\n});\n\nfunction Board({board, correctBoard, swap}) {\n  const W = board.length\n  const H = (board[0] || []).length\n  const c = useStyles({ W, H })\n\n  const [ selected, setSelected ] = React.useState(undefined)\n  const [ wallSize, setWallSize ] = React.useState(0)\n  window.setWallSize = setWallSize\n\n  return (\n    <DndProvider backend={HTML5Backend} options={{enableMouseEvents: true, preview: true}}>\n      <div\n        className={c.board}\n      >\n        {(()=>{\n          const squares = []\n          for (let y = 0; y < H; ++y) {\n            for (let x = 0; x < W; ++x) {\n              squares.push(\n                <Square\n                  key={[x,y].join(', ')}\n                  tileColor={board[x][y]}\n                  fixed={(y === 0 || y === H-1) && (x === 0 || x === W-1)}\n                  correct={JSON.stringify(board[x][y]) === JSON.stringify(correctBoard[x][y])}\n                  dndItem={{\n                    type: ItemTypes.TILE,\n                    pos: {x, y},\n                  }}\n                  selected={selected !== undefined && sameField(selected, {x, y})}\n                  onDrop={item => {\n                    swap(item.pos, {x, y})\n                  }}\n                  onClick={() => {\n                    if (selected === undefined) {\n                      setSelected({x, y})\n                    } else {\n                      if (!sameField(selected, {x, y})) {\n                        swap(selected, {x, y})\n                      }\n                      setSelected(undefined)\n                    }\n                  }}\n                  wallSize={wallSize}\n                />\n              )\n            }\n          }\n          return squares\n        })()}\n      </div>\n    </DndProvider>\n  );\n}\n\nexport default Board;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles'\n\nimport Board from './components/board'\nimport { ItemTypes, COLORS, SIM_CONST } from './Constants'\n\nconst randomColor = () => {\n  return COLORS[Math.floor(Math.random() * COLORS.length)]\n}\n\nconst colorDist = (a, b) => {\n  return Math.max(...a.map((item, i) => Math.abs(a[i] - b[i])))\n}\n\nconst correctColors = colors => {\n  let ok = true\n\n  colors.forEach((c1, i)=> {\n    colors.forEach((c2, j) => {\n      if (i === j) return\n      if (Math.max(...c1.map((c, k) => Math.abs(c - c2[k]))) < SIM_CONST) {\n        ok = false\n        return\n      }\n    })\n  })\n  return ok\n}\n\nconst getColors = () => {\n  let colors = []\n  for (let i = 0, j = 4; i < j; ++i) {\n    let color = randomColor()\n    colors.push(color);\n  }\n  return colors;\n}\n\nconst combineColors = (colorA, coefA, colorB, coefB) => {\n  return colorA.map((item, i) => Math.floor((colorA[i]*coefA + colorB[i]*coefB)/(coefA+coefB) + .5))\n}\n\nconst shuffleBoard = board => {\n  let colors = []\n  for (let i = 0; i < board.length; ++i) {\n    for (let j = 0; j < board[i].length; ++j) {\n      if ((i === 0 || i === board.length-1) && (j === 0 || j === board[i].length-1)) continue\n      colors.push(board[i][j])\n    }\n  }\n  \n  for (let i = 0; i < board.length; ++i) {\n    for (let j = 0; j < board[i].length; ++j) {\n      if ((i === 0 || i === board.length-1) && (j === 0 || j === board[i].length-1)) continue\n      board[i][j] = colors[Math.floor(Math.random()*colors.length)]\n      colors = colors.filter(c => c !== board[i][j])\n    }\n  }\n  return board\n}\n\nconst genBoard = (correctBoard, W, H, iter=1) => {\n  const colors = getColors();\n  const board = []\n  for (let i = 0; i < W; ++i) {\n    board.push([])\n    let colorAbove = combineColors(colors[0], W-1-i, colors[1], i)\n    let colorBelow = combineColors(colors[2], W-1-i, colors[3], i)\n    for (let j = 0; j < H; ++j) {\n      board[i].push(\n        combineColors(colorAbove, H-1-j, colorBelow, j)\n      )\n    }\n  }\n  if (!correctColors([].concat(...board)) && iter < 100) return genBoard(correctBoard, W, H, iter+1)\n  else {\n    correctBoard.current = board\n    console.log(\"it took\", iter, \"iterations\")\n  }\n  return shuffleBoard(JSON.parse(JSON.stringify(correctBoard.current)))\n}\n\nconst checkWin = (board, correctBoard) => {\n  for (let i = 0; i < board.length; ++i) {\n    for (let j = 0; j < board[i].length; ++j) {\n      if (JSON.stringify(board[i][j]) !== JSON.stringify(correctBoard.current[i][j])) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\nconst useStyles = makeStyles({\n  app: {\n  },\n  controls: {\n    display: 'inline-block',\n    \"& > *\": {\n      display: 'block',\n    },\n  },\n});\n\nfunction App() {\n  const c = useStyles();\n  const correctBoard = React.useRef()\n  const [ { W, H }, setDim ] = React.useState({W: 6, H: 6})\n  const [ input, setInput ] = React.useState({W: W.toString(), H: H.toString()})\n  const [ board, setBoard ] = React.useState(() => genBoard(correctBoard, W, H))\n  React.useEffect(() => {\n    setBoard(genBoard(correctBoard, W, H))\n  }, [W, H])\n  const [ counter, setCounter ] = React.useState(0, [board])\n  React.useEffect(() => {\n    if (checkWin(board, correctBoard)) {\n      const pid = setTimeout(() => {\n        alert(`E> Yay you did it! <3 It took you ${counter} steps. World averadge is ${counter*2}.`)\n        setBoard(genBoard(correctBoard))\n        setCounter(0)\n      }, 500)\n      return () => clearTimeout(pid)\n    }\n  }, [board])\n\n  const swap = (a, b) => {\n    setCounter(c => c+1)\n    setBoard(board_old => {\n      let board = JSON.parse(JSON.stringify(board_old))\n      let helper = board[a.x][a.y]\n      board[a.x][a.y] = board[b.x][b.y]\n      board[b.x][b.y] = helper\n      return board\n    })\n  }\n\n  const solve = () => {\n    setBoard(correctBoard.current)\n  }\n\n  window.solve = solve\n\n  return (\n    <div className={c.app}>\n      <Board board={board} correctBoard={correctBoard.current} swap={swap}/>\n      <div className={c.controls}>\n        <input value={input.W} onChange={e => setInput({...input, W: e.target.value})}/>\n        <input value={input.H} onChange={e => setInput({...input, H: e.target.value})}/>\n        <button onClick={() => setDim({ W: Number(input.W), H: Number(input.H) })}>\n          Apply\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}